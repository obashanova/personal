---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
interface Props {
	title: string;
	src: string;
	body: string;
	href: string;
	features: string[];
}
//src/assets/images/lodes.png
const { href, src, title, body, features } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/images/*.{jpeg,jpg,png,gif}"
);
console.log(images[src]);
if (!images[src])
	throw new Error(
		`"${src}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
	);
---

<div class="link-card">
	<!-- <a href={href} target="_blank" rel="noopener noreferrer"> -->
	<figure class="front">
		<Image src={images[src]()} alt={title} class="card-image" />
		<figcaption>
			<h4>
				{title}
			</h4>
			<p>Product Configurator</p>
		</figcaption>
	</figure>
	<div class="back">
		<p>{body}</p>
		<p>Main features:</p>
		<ul>
			{features.map((feature) => <li>{feature}</li>)}
		</ul>
	</div>
	<!-- </a> -->
</div>
<style>
	.link-card {
		position: relative;
		width: calc(50% - 1rem);
		height: fit-content;
		padding: 0.5rem;
		margin: 0px;
		margin-bottom: 15px;
		p {
			margin-top: 0;
			margin-bottom: 10px;
		}
	}
	.link-card > a {
		width: 100%;
		margin: 15px 20px;
		text-decoration: none;
	}

	.front {
		position: relative;
		margin: 0;
		padding: 0.5rem;
		display: flex;
		flex-direction: column;
		border-radius: 12px;
		transform: perspective(60em) rotateY(0deg);
		transition: transform 0.7s linear 0s;
		backface-visibility: hidden;
		box-shadow: var(--shadow);
		-moz-box-shadow: var(--shadow);
		-webkit-box-shadow: var(--shadow);
	}

	.card-image {
		width: 100%;
		height: auto;
	}

	figcaption {
		width: 100%;
		margin: 0;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		border-radius: 0 0 8px 8px;
		h4 {
			margin: 10px 0;
			margin-top: 25px;
		}
		p {
			font-size: smaller;
			margin: 0;
		}
	}

	.back {
		position: absolute;
		top: 0;
		padding: 1.2rem;
		width: calc(100% - 2.4rem);
		height: calc(100% - 2.4rem);
		display: flex;
		flex-direction: column;
		border-radius: 12px;
		transform: perspective(60em) rotateY(180deg);
		backface-visibility: hidden;
		transition: transform 0.5s linear 0s;
		box-shadow: var(--shadow);
		-moz-box-shadow: var(--shadow);
		-webkit-box-shadow: var(--shadow);
		p {
			font-size: 1rem;
		}
	}

	ul {
		margin: 0;
		padding-left: 15px;
		font-weight: lighter;
		font-size: 1rem;
	}
	li {
		margin: 10px 0;
	}

	/* .link-card:is(:hover, :focus-within) {
		background-color: #d9d9d9;
	} */

	.link-card:hover > .front {
		transform: perspective(60em) rotateY(-180deg);
	}

	.link-card:hover > .back {
		transform: perspective(60em) rotateY(0deg);
	}
</style>
